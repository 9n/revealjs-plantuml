{"mappings":";;AAAA;AAEA,MAAM,4BAAM,GAAG,IAAM;IACjB,OAAO;QACH,EAAE,EAAE,UAAU;QACd,IAAI,EAAE,SAAU,MAAM,EAAE;YACpB,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,UAAU,IAAI,kCAAkC,AAAC;YACjF,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAM;gBACrB,QAAQ,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,SAAU,KAAK,EAAE;oBAC5E,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;oBACxC,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,GAAG,aAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC1D,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;oBAEtC,IAAI,GAAG,GAAG,KAAK,CAAC,aAAa,AAAC;oBAC9B,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;iBACzC,CAAC,CAAC;aACN,CAAC,CAAC;SACN;KAEJ,CAAC;CACL,AAAC;IAGF,wCAAsB,GAAP,4BAAM","sources":["src/plantuml.js"],"sourcesContent":["import { encode } from 'plantuml-encoder';\n\nconst Plugin = () => {\n    return {\n        id: 'plantuml',\n        init: function (reveal) {\n            let server = reveal.getConfig().serverPath || '//www.plantuml.com/plantuml/svg/';\n            reveal.on('ready', () => {\n                document.querySelectorAll('.reveal pre code.plantuml').forEach(function (block) {\n                    let img = document.createElement(\"img\");\n                    img.setAttribute(\"src\", server + encode(block.innerText));\n                    img.setAttribute(\"class\", \"plantuml\");\n\n                    let pre = block.parentElement;\n                    pre.parentNode.replaceChild(img, pre);\n                });\n            });\n        }\n\n    };\n};\n\n\nexport default Plugin;"],"names":[],"version":3,"file":"plantuml.esm.js.map"}